#!/bin/sh

# Copyright 2016 Antonio Malcolm, released under an MPL, v. 2.0, license. All rights reserved.
#
# This file is part of Corgi Scripts (also referred to as corgi-scripts).
#
# Corgi Scripts is subject to the terms of the Mozilla Public License, v. 2.0. 
# If a copy of the MPL was not distributed with this file, 
# you can obtain one at http://mozilla.org/MPL/2.0/.
#
# Corgi Scripts is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either expressed or implied.
# See LICENSE.txt, for the specific language governing rights and limitations under the License,
# which should have been provided with this software, or visit http://mozilla.org/MPL/2.0/.

# corgi-openbox-menus-power-management-battery.shlib - Functions used to generate Openbox menus and items
#                                                      which describe the current state of batteries, using upower as a backend.
#
# v2016.10.25
#
# Authored by Antonio Malcolm
#
# Requires: corgi-openbox-menus-core.shlib
# Requires: corgi-posix-core.shlib (normally provided by corgi-openbox-menus-core.shlib)
# Requires: upower - to check the battery statuses


currentDirectory="`dirname "$0"`"
currentDirectory="`cd "$currentDirectory" ; pwd -P `"
parentDirectory="`dirname $currentDirectory`"

corgiObMenuLib="$parentDirectory/lib/corgi/openbox/corgi-openbox-menus-core.shlib"

if [ ! -e "$corgiObMenuLib" ]
then
  logger "ERROR (corgi-openbox-menus-power-management-battery.shlib): The Corgi Openbox Menu library is missing. Exiting..."
  echo "ERROR (corgi-openbox-menus-power-management-battery.shlib): The Corgi Openbox Menu library is missing. Exiting..."
  exit 1
fi

if ! command -v upower > /dev/null
then
  logger "ERROR (corgi-openbox-menus-power-management-battery.shlib): upower is missing. Exiting..."
  echo "ERROR (corgi-openbox-menus-power-management-battery.shlib): upower is missing. Exiting..."
  exit 1
fi

buildBatteryDetailMenuItems() {

  batteryDetailMenuItems=''

  batteryId="$1"
   
      upower -i "$batteryId" | {
      
        while read -r line
        do
        
        	fieldId="`corgiFetchSubstringBefore "$line" ':' 'first'`"
          fieldId="`corgiTrimWhiteSpace "$fieldId"`"
          
          label=''
         
          case "$fieldId" in
            'vendor') label='Vendor' ;;
            'model') label='Model' ;;
            'state') label='State' ;;
            'energy') label='Current Energy' ;;
            'energy-full') label='Current Energy Capacity' ;;
            'energy-full-design') label='Orig. Energy Capacity' ;;
            'energy-rate') label='Current Energy Rate' ;;
            'time to empty') label='Time Remaining' ;;
            'time to full') label='Charge Time Remaining' ;;
            'percentage') label='Power Remaining' ;;
            'capacity') label='Capacity Remaining' ;;
            'technology') label='Cell Type' ;;
          esac          
          
          if [ ! -z "$label" ]
          then

        	  value="`corgiFetchSubstringAfter "$line" ':' 'first'`"
            value="`corgiTrimWhiteSpace "$value"`"
            
            if [ -z "$value" ]
            then
              value='--'
            else
            	
            	case "$value" in
            		'fully-charged') value='fully charged' ;;
            	esac
            	
            fi
            
            batteryDetailMenuItems="$batteryDetailMenuItems`corgiObMenuItem "label:$label: $value"`"

          fi          
        
        done
        
        echo "$batteryDetailMenuItems"
        exit $?
      
      }
      
  exit $?

}

buildBatteriesDetailsMenu() {

  batteryDenotation='battery_'

  upower -e | grep $batteryDenotation | {
  
    batteryDetailsMenus=''
  
    while read -r line
    do
    
      batteryName="`corgiFetchSubstringAfter "$line" "$batteryDenotation" 'last'`"
      batteryDetailMenuItems="`buildBatteryDetailMenuItems "$line"`"

      if [ ! -z "$batteryDetailMenuItems" ]
      then
        menuId="`corgiMakeIdString "corgi-menus-power-management-battery-details-$batteryName-"`"
        batteryDetailsMenus="$batteryDetailsMenus`corgiObMenu "id:$menuId" "label:$batteryName" "content:$batteryDetailMenuItems"`"       
      fi
    
    done

    if [ ! -z "$batteryDetailsMenus" ]
    then
      menuId="`corgiMakeIdString "corgi-menu-power-management-battery-details-"`"
      batteryDetailsMenu="`corgiObMenu "id:$menuId" "label:Batteries" "content:$batteryDetailsMenus"`"
    fi
    
    echo "$batteryDetailsMenu"
    exit $?
  
  }

  exit $?

}